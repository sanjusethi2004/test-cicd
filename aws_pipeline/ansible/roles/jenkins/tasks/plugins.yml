---
# jenkins_plugin module doesn't support password files.
#- name: Get init password Jenkins
#  shell: cat /var/lib/jenkins/secrets/initialAdminPassword
#  changed_when: false
#  register: jenkins_admin_password

#- name: Get Jenkins admin password from file.
#  slurp:
#    src: "{{ jenkins_admin_password_file }}"
#  register: adminpasswordfile
  #no_log: true
  #when: jenkins_admin_password_file | default(false)
#  tags: ['skip_ansible_lint']

#- name: Set Jenkins admin password fact.
#  set_fact:
#    jenkins_admin_password: "{{ adminpasswordfile['stdout'] | default(jenkins_admin_password) }}"
  #no_log: true

# Update Jenkins so that plugin updates don't fail.
#- name: Create Jenkins updates directory.
#  file:
#    path: "/var/lib/jenkins/updates"
#    state: directory
    #owner: jenkins
    #group: jenkins

#- name: Download current plugin updates from Jenkins update site.
#  get_url:
#    url: "{{ jenkins_updates_url }}/update-center.json"
#    dest: "/var/lib/jenkins/updates/default.json"
#  changed_when: false
#  register: get_result
#  until: get_result is success
#  retries: 3
#  delay: 2

#- name: Remove first and last line from json file.
#  replace:
#    path: "/var/lib/jenkins/updates/default.json"
#    regexp: "1d;$d"

- name: Install Jenkins plugins using password.
  jenkins_plugin:
    name: "{{ item }}"
    #jenkins_home: "/var/lib/jenkins"
    url_username: "{{ jenkins_admin_username }}"
    url_password: "{{ jenkins_admin_password }}"
    state: "{{ jenkins_plugins_state }}"
    timeout: "{{ jenkins_plugin_timeout }}"
    updates_expiration: "{{ jenkins_plugin_updates_expiration }}"
    updates_url: "{{ jenkins_updates_url }}"
    #url: "http://{{ jenkin_public_ip }}:8080/jenkins"
    with_dependencies: "{{ jenkins_plugins_install_dependencies }}"
  with_items: "{{ jenkins_plugins }}"
  #when: jenkins_admin_password | default(false)
  notify: restart jenkins
  tags: ['skip_ansible_lint']
  register: plugin_result
  until: plugin_result is success
  retries: 4
  delay: 3